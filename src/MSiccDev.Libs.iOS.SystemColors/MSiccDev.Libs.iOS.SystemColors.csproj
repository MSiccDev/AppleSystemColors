<Project Sdk="MSBuild.Sdk.Extras/3.0.38">

    <PropertyGroup>
	  <ProjectVersion>1.0.21491</ProjectVersion>
	  <PrereleaseSuffix>-pre</PrereleaseSuffix>
	<RevisionSeparator>.</RevisionSeparator>
	<Revision>1</Revision>
	<PreReleaseVersion>$(ProjectVersion)$(PrereleaseSuffix)$(RevisionSeparator)$(Revision)</PreReleaseVersion>
  </PropertyGroup>

   <PropertyGroup>
    <TargetFrameworks>netstandard2.0;netstandard2.1;Xamarin.iOS10;</TargetFrameworks>
    <Configurations>Debug;Release;DebugNugetPush;ReleaseNugetPush</Configurations>

    <AssemblyName>MSiccDev.Libs.iOS.SystemColors</AssemblyName>
    <RootNamespace>MSiccDev.Libs.iOS.SystemColors</RootNamespace>
    <PackageId>MSiccDev.Libs.iOS.SystemColors</PackageId>
    <LangVersion>Latest</LangVersion>
    <NeutralLanguage>en</NeutralLanguage>
	<DefineConstants>$(DefineConstants);</DefineConstants>

	<EnableDefaultCompileItems>false</EnableDefaultCompileItems>

	<GenerateLibraryLayout>true</GenerateLibraryLayout>
	<IncludeContentInPack>true</IncludeContentInPack>

    <PackageLicenseUrl>https://github.com/MSiccDev/SystemColorsiOS/blob/main/LICENSE</PackageLicenseUrl>
    <PackageProjectUrl>https://github.com/MSiccDev/SystemColorsiOS</PackageProjectUrl>
    <RepositoryUrl>https://github.com/MSiccDev/SystemColorsiOS</RepositoryUrl>
	<PackageReleaseNotes>Library that provides the iOS system colors to Xamarin.Forms</PackageReleaseNotes>
	<PackageTags>xamarin, ios, xamarin.forms, plugin, system colors, colors, system</PackageTags>

	<Title>MSiccDev.Libs.iOS.SystemColors</Title>
	<Summary>Library that provides iOS System Colors in Xamarin.Forms</Summary>
	<Description>Library that provides iOS System Colors in Xamarin.Forms</Description>

	<Owners>MSiccDev Software Development</Owners>
	<Authors>Marco Siccardi</Authors>
    <Copyright>Â© 2021 MSiccDev Software Development</Copyright>
  </PropertyGroup>

    <PropertyGroup Condition=" '$(Configuration)'=='Debug' ">
    <DefineConstants>DEBUG</DefineConstants>
    <PackageVersion>$(PreReleaseVersion)</PackageVersion>
    <DebugType>full</DebugType>
    <GenerateDocumentationFile>false</GenerateDocumentationFile>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)'=='DebugNugetPush' ">
    <DefineConstants>DEBUG</DefineConstants>
    <PackageVersion>$(PreReleaseVersion)</PackageVersion>
    <DebugType>full</DebugType>
    <DebugSymbols>true</DebugSymbols>
    <GenerateDocumentationFile>false</GenerateDocumentationFile>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <IncludeSource>True</IncludeSource>
    <IncludeSymbols>True</IncludeSymbols>
    <IncludeContentInPack>true</IncludeContentInPack>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)'=='Release' ">
    <DefineConstants>RELEASE</DefineConstants>
    <PackageVersion>$(ReleaseVersion)</PackageVersion>
    <DebugType>pdbonly</DebugType>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)'=='ReleaseNugetPush' ">
    <DefineConstants>RELEASE</DefineConstants>
    <PackageVersion>$(ReleaseVersion)</PackageVersion>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <DebugType>pdbonly</DebugType>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <IncludeContentInPack>true</IncludeContentInPack>
  </PropertyGroup>

  <Target Name="CleanOldNupkg" BeforeTargets="Build">
    <ItemGroup>
      <FilesToDelete Include="$(ProjectDir)$(BaseOutputPath)$(Configuration)\$(AssemblyName).*.nupkg"></FilesToDelete>
    </ItemGroup>
    <Delete Files="@(FilesToDelete)" />
    <Message Text="Old nupkg in $(ProjectDir)$(BaseOutputPath)$(Configuration) deleted." Importance="High"></Message>
  </Target>

  <!--
  You need to create your own nuget.config file 
  see https://docs.github.com/en/free-pro-team@latest/packages/guides/configuring-dotnet-cli-for-use-with-github-packages
  -->
  <Target Name="PushDebug" AfterTargets="Pack" Condition="'$(Configuration)'=='DebugNugetPush'">
    <Exec Command="dotnet nuget push &quot;$(ProjectDir)$(BaseOutputPath)$(Configuration)\$(PackageId).*.symbols.nupkg&quot; -s &quot;github&quot; " />
  </Target>
  <Target Name="PushRelease" AfterTargets="Pack" Condition="'$(Configuration)'=='ReleaseNugetPush'">
    <Exec Command="dotnet nuget push &quot;$(ProjectDir)$(BaseOutputPath)$(Configuration)\$(PackageId).*.nupkg&quot; -s &quot;github&quot; " />
  </Target>


  <ItemGroup>
	<PackageReference Include="Xamarin.Forms" Version="5.0.0.2244" />
	<PackageReference Include="Xamarin.Essentials" Version="1.7.0" />

	<Compile Include="SystemColorsIosResourceDictionary.xaml.cs">
	  <DependentUpon>SystemColorsIosResourceDictionary.xaml</DependentUpon>
	  <SubType>Code</SubType>
	</Compile>

	<Compile Include="**\*.shared.cs" />
  </ItemGroup>

    <ItemGroup Condition=" $(TargetFramework.StartsWith('netstandard')) ">

  </ItemGroup>

  <ItemGroup Condition=" $(TargetFramework.StartsWith('Xamarin.iOS')) ">
	<Compile Include="**\*.ios.cs" />
  </ItemGroup>


</Project>
